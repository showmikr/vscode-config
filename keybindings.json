// Place your key bindings in this file to override the defaults
[
  // Change toggle terminal from Ctrl-` to Ctrl-/
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },

  // Remap Ctrl-n and Ctrl-p to next/prev select in menus
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "quickInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "quickInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },

  }

  /* vscode-neovim (and germanScroll) related configuration.
     Uncomment when you enable vscode-neovim and germanScroll
  */
  // {
  //   "key": "ctrl+u",
  //   "command": "-vscode-neovim.ctrl-u",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+u",
  //   "command": "germanScroll.bertholdUp",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.u && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+d",
  //   "command": "-vscode-neovim.ctrl-d",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+d",
  //   "command": "germanScroll.bertholdDown",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.d && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+f",
  //   "command": "-vscode-neovim.ctrl-f",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+f",
  //   "command": "germanScroll.christaDown",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+b",
  //   "command": "-vscode-neovim.ctrl-b",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.b && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "ctrl+b",
  //   "command": "germanScroll.christaUp",
  //   "when": "editorTextFocus && neovim.ctrlKeysNormal.b && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "/",
  //   "command": "-vscode-neovim.send",
  //   "when": "editorTextFocus && neovim.init && focusedView == 'workbench.panel.output' && neovim.mode != 'insert'"
  // }
]
